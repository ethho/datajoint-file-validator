[tool.poetry]
name = "datajoint-file-validator"
version = "0.1.0"
description = "A tool to validate DataJoint files and filesets"
authors = ["Ethan Ho <53266718+ethho@users.noreply.github.com>"]
license = "MIT"
include = [
    { path = "manifests", format = ["sdist", "wheel"] }
]

[tool.poetry.dependencies]
python = ">=3.8.1,<4.0.0"
cerberus = "^1.3.5"
typer = {version = "^0.9.0", extras = ["all"]}
pyyaml = "^6.0.1"
pytz = "^2023.3.post1"
wcmatch = "^8.5"
python-dotenv = "^1.0.0"

[tool.poetry.scripts]
datajoint-file-validator = "datajoint_file_validator.cli:app"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.1"
pytest-cov = "^4.1.0"
black = "^23.12.1"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.3"
mkdocs-material = "^9.5.3"
mkdocs-redirects = "^1.2.1"
mkdocs-exclude = "^1.0.2"
mdx-truly-sane-lists = "^1.3"
pymdown-extensions = "^10.7"
mkdocs-section-index = "^0.3.8"
mkdocstrings = {version = "^0.24.0", extras = ["python"]}
termynal = "^0.11.1"

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    ]