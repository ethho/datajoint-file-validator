uri: https://raw.githubusercontent.com/datajoint/datajoint-file-validator/main/manifests/demo_dlc_v0.1
id: demo_dlc
version: 0.1.0
description: DeepLabCut demo fileset type
author:
  id: Ethan Ho
  email: ethan@datajoint.com
rules:
  - id: "Min total files"
    description: "Check that there are at least 6 files anywhere in the fileset"
    # This is the default query, which returns every file, even if it is in
    # a subdirectory.
    query: "**"
    count_min: 6
  - id: "Count .mp4 files"
    description: "Check that there are at least 2 .mp4 files"
    query: "**/*.mp4"
    count_min: 2

  # More complex rules below
  - id: "Only .mp4 and .csv at top level"
    # This query returns only files at the top level, and will not consider
    # files in subdirectories.
    query: "*"
    # Note that this regex will not match subdirectores.
    regex: ".*\\.mp4$|.*\\.csv$"
  - id: "Every video file must have a corresponding csv file"
    description: "Check that every video file has a corresponding csv file"
    # query: "**" is implicit here
    # Instead of other constraints, we can use eval to write a custom constraint function.
    eval: |
      def check_one_to_one(results: list[dict]) -> bool:
          n_mp4 = len([r for r in results if r['extension'] == '.mp4'])
          n_csv = len([r for r in results if r['extension'] == '.csv'])
          return n_mp4 == n_csv
